//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLR.WPF.DlrServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Token", Namespace="http://schemas.datacontract.org/2004/07/DzoAuthService")]
    [System.SerializableAttribute()]
    public partial class Token : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private DLR.WPF.DlrServer.Region UserRegionField;
        
        private System.DateTime ExpirationTimek__BackingFieldField;
        
        private string TokenKeyk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public DLR.WPF.DlrServer.Region UserRegion {
            get {
                return this.UserRegionField;
            }
            set {
                if ((this.UserRegionField.Equals(value) != true)) {
                    this.UserRegionField = value;
                    this.RaisePropertyChanged("UserRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ExpirationTime>k__BackingField", IsRequired=true)]
        public System.DateTime ExpirationTimek__BackingField {
            get {
                return this.ExpirationTimek__BackingFieldField;
            }
            set {
                if ((this.ExpirationTimek__BackingFieldField.Equals(value) != true)) {
                    this.ExpirationTimek__BackingFieldField = value;
                    this.RaisePropertyChanged("ExpirationTimek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TokenKey>k__BackingField", IsRequired=true)]
        public string TokenKeyk__BackingField {
            get {
                return this.TokenKeyk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenKeyk__BackingFieldField, value) != true)) {
                    this.TokenKeyk__BackingFieldField = value;
                    this.RaisePropertyChanged("TokenKeyk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Region", Namespace="http://schemas.datacontract.org/2004/07/ActsModel")]
    public enum Region : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Industrial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dzerzhinsky = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kirov = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Leninsky = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Motovilikhinsky = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ordzhonikidzevsky = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sverdlovsky = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewLyads = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Act", Namespace="http://schemas.datacontract.org/2004/07/ActsModel")]
    [System.SerializableAttribute()]
    public partial class Act : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DLR.WPF.DlrServer.ActType ActTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaAdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreaNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AreaSquareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadastrNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DLR.WPF.DlrServer.CheckClass CheckClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DLR.WPF.DlrServer.ContactInfo CheckContactInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DLR.WPF.DlrServer.CheckType CheckTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DLR.WPF.DlrServer.Region CreatorRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocumentBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DLR.WPF.DlrServer.ContactInfo[] InvolvedContactInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MakingEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> MakingLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakingPlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MakingStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasurementDeviceParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReasonDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonRequisitesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritorialBodyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActNumber {
            get {
                return this.ActNumberField;
            }
            set {
                if ((this.ActNumberField.Equals(value) != true)) {
                    this.ActNumberField = value;
                    this.RaisePropertyChanged("ActNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DLR.WPF.DlrServer.ActType ActType {
            get {
                return this.ActTypeField;
            }
            set {
                if ((this.ActTypeField.Equals(value) != true)) {
                    this.ActTypeField = value;
                    this.RaisePropertyChanged("ActType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaAdress {
            get {
                return this.AreaAdressField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaAdressField, value) != true)) {
                    this.AreaAdressField = value;
                    this.RaisePropertyChanged("AreaAdress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaNumber {
            get {
                return this.AreaNumberField;
            }
            set {
                if ((this.AreaNumberField.Equals(value) != true)) {
                    this.AreaNumberField = value;
                    this.RaisePropertyChanged("AreaNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AreaSquare {
            get {
                return this.AreaSquareField;
            }
            set {
                if ((this.AreaSquareField.Equals(value) != true)) {
                    this.AreaSquareField = value;
                    this.RaisePropertyChanged("AreaSquare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadastrNumber {
            get {
                return this.CadastrNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CadastrNumberField, value) != true)) {
                    this.CadastrNumberField = value;
                    this.RaisePropertyChanged("CadastrNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DLR.WPF.DlrServer.CheckClass CheckClass {
            get {
                return this.CheckClassField;
            }
            set {
                if ((this.CheckClassField.Equals(value) != true)) {
                    this.CheckClassField = value;
                    this.RaisePropertyChanged("CheckClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DLR.WPF.DlrServer.ContactInfo CheckContactInfo {
            get {
                return this.CheckContactInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckContactInfoField, value) != true)) {
                    this.CheckContactInfoField = value;
                    this.RaisePropertyChanged("CheckContactInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DLR.WPF.DlrServer.CheckType CheckType {
            get {
                return this.CheckTypeField;
            }
            set {
                if ((this.CheckTypeField.Equals(value) != true)) {
                    this.CheckTypeField = value;
                    this.RaisePropertyChanged("CheckType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DLR.WPF.DlrServer.Region CreatorRegion {
            get {
                return this.CreatorRegionField;
            }
            set {
                if ((this.CreatorRegionField.Equals(value) != true)) {
                    this.CreatorRegionField = value;
                    this.RaisePropertyChanged("CreatorRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DocumentBytes {
            get {
                return this.DocumentBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentBytesField, value) != true)) {
                    this.DocumentBytesField = value;
                    this.RaisePropertyChanged("DocumentBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DLR.WPF.DlrServer.ContactInfo[] InvolvedContactInfos {
            get {
                return this.InvolvedContactInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvedContactInfosField, value) != true)) {
                    this.InvolvedContactInfosField = value;
                    this.RaisePropertyChanged("InvolvedContactInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MakingEndTime {
            get {
                return this.MakingEndTimeField;
            }
            set {
                if ((this.MakingEndTimeField.Equals(value) != true)) {
                    this.MakingEndTimeField = value;
                    this.RaisePropertyChanged("MakingEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> MakingLength {
            get {
                return this.MakingLengthField;
            }
            set {
                if ((this.MakingLengthField.Equals(value) != true)) {
                    this.MakingLengthField = value;
                    this.RaisePropertyChanged("MakingLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakingPlace {
            get {
                return this.MakingPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.MakingPlaceField, value) != true)) {
                    this.MakingPlaceField = value;
                    this.RaisePropertyChanged("MakingPlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MakingStartTime {
            get {
                return this.MakingStartTimeField;
            }
            set {
                if ((this.MakingStartTimeField.Equals(value) != true)) {
                    this.MakingStartTimeField = value;
                    this.RaisePropertyChanged("MakingStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeasurementDeviceParams {
            get {
                return this.MeasurementDeviceParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasurementDeviceParamsField, value) != true)) {
                    this.MeasurementDeviceParamsField = value;
                    this.RaisePropertyChanged("MeasurementDeviceParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReasonDate {
            get {
                return this.ReasonDateField;
            }
            set {
                if ((this.ReasonDateField.Equals(value) != true)) {
                    this.ReasonDateField = value;
                    this.RaisePropertyChanged("ReasonDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonRequisites {
            get {
                return this.ReasonRequisitesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonRequisitesField, value) != true)) {
                    this.ReasonRequisitesField = value;
                    this.RaisePropertyChanged("ReasonRequisites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritorialBodyName {
            get {
                return this.TerritorialBodyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritorialBodyNameField, value) != true)) {
                    this.TerritorialBodyNameField = value;
                    this.RaisePropertyChanged("TerritorialBodyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactInfo", Namespace="http://schemas.datacontract.org/2004/07/ActsModel")]
    [System.SerializableAttribute()]
    public partial class ContactInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassportDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PassportNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fio {
            get {
                return this.FioField;
            }
            set {
                if ((object.ReferenceEquals(this.FioField, value) != true)) {
                    this.FioField = value;
                    this.RaisePropertyChanged("Fio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Inn {
            get {
                return this.InnField;
            }
            set {
                if ((this.InnField.Equals(value) != true)) {
                    this.InnField = value;
                    this.RaisePropertyChanged("Inn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassportData {
            get {
                return this.PassportDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PassportDataField, value) != true)) {
                    this.PassportDataField = value;
                    this.RaisePropertyChanged("PassportData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PassportNumber {
            get {
                return this.PassportNumberField;
            }
            set {
                if ((this.PassportNumberField.Equals(value) != true)) {
                    this.PassportNumberField = value;
                    this.RaisePropertyChanged("PassportNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActType", Namespace="http://schemas.datacontract.org/2004/07/ActsModel")]
    public enum ActType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        АктОбследования = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        АктПроверкиФизЛица = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        АктПроверкиЮл = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ФотоТаблица = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ОбмерПлощадиЗу = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ПротоколАдмПравонарушения = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ЖурналУчетаПроверокЮл = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ПредписаниеУтсрНарушЗемЗакона = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ЗаявлениеСоглВнеплВыездПроверки = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        РаспоряжениеПроверкиЮл = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ПланПроверокГраждан = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckClass", Namespace="http://schemas.datacontract.org/2004/07/ActsModel")]
    public enum CheckClass : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Planned = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unplanned = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckType", Namespace="http://schemas.datacontract.org/2004/07/ActsModel")]
    public enum CheckType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Documentary = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Departure = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DlrServer.IAuthService")]
    public interface IAuthService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Authenticate", ReplyAction="http://tempuri.org/IAuthService/AuthenticateResponse")]
        DLR.WPF.DlrServer.Token Authenticate(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/Authenticate", ReplyAction="http://tempuri.org/IAuthService/AuthenticateResponse")]
        System.Threading.Tasks.Task<DLR.WPF.DlrServer.Token> AuthenticateAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetActs", ReplyAction="http://tempuri.org/IAuthService/GetActsResponse")]
        DLR.WPF.DlrServer.Act[] GetActs(DLR.WPF.DlrServer.Token token, int count, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/GetActs", ReplyAction="http://tempuri.org/IAuthService/GetActsResponse")]
        System.Threading.Tasks.Task<DLR.WPF.DlrServer.Act[]> GetActsAsync(DLR.WPF.DlrServer.Token token, int count, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/DeleteAct", ReplyAction="http://tempuri.org/IAuthService/DeleteActResponse")]
        bool DeleteAct(DLR.WPF.DlrServer.Act act, DLR.WPF.DlrServer.Token token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/DeleteAct", ReplyAction="http://tempuri.org/IAuthService/DeleteActResponse")]
        System.Threading.Tasks.Task<bool> DeleteActAsync(DLR.WPF.DlrServer.Act act, DLR.WPF.DlrServer.Token token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/AddAct", ReplyAction="http://tempuri.org/IAuthService/AddActResponse")]
        bool AddAct(DLR.WPF.DlrServer.Act act, DLR.WPF.DlrServer.Token token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthService/AddAct", ReplyAction="http://tempuri.org/IAuthService/AddActResponse")]
        System.Threading.Tasks.Task<bool> AddActAsync(DLR.WPF.DlrServer.Act act, DLR.WPF.DlrServer.Token token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthServiceChannel : DLR.WPF.DlrServer.IAuthService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthServiceClient : System.ServiceModel.ClientBase<DLR.WPF.DlrServer.IAuthService>, DLR.WPF.DlrServer.IAuthService {
        
        public AuthServiceClient() {
        }
        
        public AuthServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DLR.WPF.DlrServer.Token Authenticate(string login, string password) {
            return base.Channel.Authenticate(login, password);
        }
        
        public System.Threading.Tasks.Task<DLR.WPF.DlrServer.Token> AuthenticateAsync(string login, string password) {
            return base.Channel.AuthenticateAsync(login, password);
        }
        
        public DLR.WPF.DlrServer.Act[] GetActs(DLR.WPF.DlrServer.Token token, int count, int offset) {
            return base.Channel.GetActs(token, count, offset);
        }
        
        public System.Threading.Tasks.Task<DLR.WPF.DlrServer.Act[]> GetActsAsync(DLR.WPF.DlrServer.Token token, int count, int offset) {
            return base.Channel.GetActsAsync(token, count, offset);
        }
        
        public bool DeleteAct(DLR.WPF.DlrServer.Act act, DLR.WPF.DlrServer.Token token) {
            return base.Channel.DeleteAct(act, token);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteActAsync(DLR.WPF.DlrServer.Act act, DLR.WPF.DlrServer.Token token) {
            return base.Channel.DeleteActAsync(act, token);
        }
        
        public bool AddAct(DLR.WPF.DlrServer.Act act, DLR.WPF.DlrServer.Token token) {
            return base.Channel.AddAct(act, token);
        }
        
        public System.Threading.Tasks.Task<bool> AddActAsync(DLR.WPF.DlrServer.Act act, DLR.WPF.DlrServer.Token token) {
            return base.Channel.AddActAsync(act, token);
        }
    }
}
